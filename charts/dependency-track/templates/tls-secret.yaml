{{- if and (eq (.Values.tls.enabled | toString) "true") (.Values.tls.existingSecret | empty) }}
{{- $ca := genCA "dependency-track-ca" 365 }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-tls" (include "dependencytrack.fullname" .) }}
  namespace: {{ include "dependencytrack.namespace" . | quote }}
  labels: {{ include "dependencytrack.commonLabels" . | fromYaml | mustToJson }}
  {{- if .Values.commonAnnotations | empty | not }}
  annotations: {{ include "!TPL" (dict "ROOT" $ "VALUE" .Values.commonAnnotations) | fromYaml | mustToJson }}
  {{- end }}
type: kubernetes.io/tls
data:
  {{- if eq (.Values.tls.autoGenerated | toString) "true" }}
  {{- $cert := genSignedCert (include "dependencytrack.fullname" .) nil (list (include "dependencytrack.fullname" .) (printf "%s.%s" (include "dependencytrack.fullname" .) (include "dependencytrack.namespace" .)) (printf "%s.%s.svc" (include "dependencytrack.fullname" .) (include "dependencytrack.namespace" .)) (printf "%s.%s.svc.%s" (include "dependencytrack.fullname" .) (include "dependencytrack.namespace" .) .Values.clusterDomain)) 365 $ca }}
  {{ .Values.tls.certFilename }}: {{ include "dependencytrack.secrets.lookup" (dict "SECRET" (printf "%s-tls" (include "dependencytrack.fullname" .)) "KEY" .Values.tls.certFilename "DEFAULTVALUE" $cert.Cert "ROOT" $) }}
  {{ .Values.tls.certKeyFilename }}: {{ include "dependencytrack.secrets.lookup" (dict "SECRET" (printf "%s-tls" (include "dependencytrack.fullname" .)) "KEY" .Values.tls.certKeyFilename "DEFAULTVALUE" $cert.Key "ROOT" $) }}
  {{ .Values.tls.certCAFilename }}: {{ include "dependencytrack.secrets.lookup" (dict "SECRET" (printf "%s-tls" (include "dependencytrack.fullname" .)) "KEY" .Values.tls.certCAFilename "DEFAULTVALUE" $ca.Cert "ROOT" $) }}
  {{- else }}
  {{- if .Values.tls.cert | empty | not }}
  {{ .Values.tls.certFilename }}: {{ .Values.tls.cert | b64enc }}
  {{- end }}
  {{- if .Values.tls.key | empty | not }}
  {{ .Values.tls.certKeyFilename }}: {{ .Values.tls.key | b64enc }}
  {{- end }}
  {{- if .Values.tls.ca | empty | not }}
  {{ .Values.tls.certCAFilename }}: {{ .Values.tls.ca | b64enc }}
  {{- end }}
  {{- end }}
{{- end }}
